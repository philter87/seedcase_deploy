name: Continuous Integration

# Deploy on push to main branch, pull requests where the target is the main branch and manual triggers
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Install python 3.11 with cache
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Install dependencies with poetry
        run: poetry install

      - name: Test migrations
        run: poetry run python manage.py migrate

      - name: Run unit tests
        run: poetry run python manage.py test

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --config fly-pr.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  Build:
    name: Build release image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Add tag for new version
        id: semanticVersion
        uses: anothrNick/github-tag-action@1.67.0
        env:
          DEFAULT_BUMP: patch
          DRY_RUN: false
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN_FOR_VERSIONS}}

      - name: Setup docker
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: philter87/django:${{ steps.semanticVersion.outputs.tag }}, philter87/django:ci
          push: true
          cache-from: type=registry,ref=philter87/django:ci
          cache-to: type=inline